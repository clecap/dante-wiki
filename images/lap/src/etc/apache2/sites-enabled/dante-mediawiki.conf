##
## This file contains the common configuration of apache for dante-wiki
##


# Increase upload limit to to allow for larger file uploads
# NOTE: this limit is also enforced by php's limits, see /etc/php.ini

LimitRequestBody 520200960

ServerName dante.local

# email on some server-generated pages, such as error documents
ServerAdmin office@unagon.com


##
## PHP-FPM configuration
##
    <FilesMatch \.php$>
        SetHandler "proxy:unix:/var/run/php/php8.2-fpm.sock|fcgi://localhost/"
    </FilesMatch>

# LogLevel: : debug, info, notice, warn, error, crit, alert, emerg.
LogLevel warn

<IfModule http2_module>
    Protocols h2 http/1.1
    LogLevel http2:info
</IfModule>

# Override access to /usr/share for security reasons
<Directory /usr/share>
  AllowOverride None
  Require all denied
</Directory>


## Rewrite Rules:
#  R   issue a redirect
#  L   last - stop processing the rule set
# 
# 
# NOTE: In the left side of a RewriteRule, in the regexp, the ENV substitution does not work!
# NOTE: Do not use RewriteBasecf
# 







##### CAVE: The rewriting to short urls is difficult, consult the mediawiki manual, problem is with titles containing amerpsand, hashmark etc.
# Rewrite from directory to the main page of the wiki
<LocationMatch "/wiki-dir">
  RewriteEngine On
  RewriteRule ^/var/www/html/wiki-dir/$ /var/www/html/wiki-dir/index.php [END]
</LocationMatch>

# Rewrite from the base without index.html to an index.html listing possible multiple instances
<LocationMatch "/">
  RewriteEngine On
  RewriteRule ^/var/www/html/$ /var/www/html/index.html [END]
</LocationMatch>







###### CAVE:  See https://stackoverflow.com/questions/11169843/apache-virtual-host-definition-with-regex  how to rewrite 
### locations so that we do not see explicitely the URL portions 

<DirectoryMatch "/var/www/html/wiki-[a-zA-Z0-9_]*/images">
  # Serve HTML as plaintext, don't execute SHTML
  AddType text/plain .html .htm .shtml .php

  # Do not run php from the images directory
  # Test this by using the browser based installer  TODO
  <FilesMatch "\.php$">
    RedirectMatch temp "(.*)" "/index.html"
  </FilesMatch>
</DirectoryMatch>

##
## Protection of other directories 
##

<DirectoryMatch "/var/www/html/wiki-[a-zA-Z0-9_]*/cache/">
Deny from all
</DirectoryMatch>

<DirectoryMatch "/var/www/html/wiki-[a-zA-Z0-9_]*/includes/">
Deny from all
</DirectoryMatch>

<DirectoryMatch "/var/www/html/wiki-[a-zA-Z0-9_]*/languages/">
Deny from all
</DirectoryMatch>

<DirectoryMatch "/var/www/html/wiki-[a-zA-Z0-9_]*/maintenance/">
Deny from all
</DirectoryMatch>

<DirectoryMatch "/var/www/html/wiki-[a-zA-Z0-9_]*/maintenance/archives/">
Deny from all
</DirectoryMatch>

<DirectoryMatch "/var/www/html/wiki-[a-zA-Z0-9_]*/serialized/">
Deny from all
</DirectoryMatch>

<DirectoryMatch "/var/www/html/wiki-[a-zA-Z0-9_]*/tests/">
Deny from all
</DirectoryMatch>

<DirectoryMatch "/var/www/html/wiki-[a-zA-Z0-9_]*/tests/qunit/">
Allow from all
</DirectoryMatch>



Header set X-Dante-Cache "before-location"

Header set X-Dante-Headercheck "was set"

Header always set X-Dante-Headeralways "CustomValue"

##
## If the symbol NO_CACHE is defined on start we really force-remove cache headers. 
## This seems necessary since it looks like PHP sets cache headers, eg for load.php URLs of mediawiki
##
<IfDefine NO_CACHE>
    ExpiresActive Off
    Header always unset Cache-Control
    Header always unset Expires
    Header always unset Pragma
    Header always unset Last-Modified
    Header always unset ETag
    Header always set X-Dante-Cache "no-cache"
</IfDefine>


<Location "/">

<IfDefine DO_CACHE>
  # Enable expirations
  ExpiresActive On

  # Default directive
  ExpiresDefault "access plus 1 month"

  # Configure expiration for various types of files
  ExpiresByType text/html "access plus 1 day"
  ExpiresByType image/gif "access plus 1 day"
  ExpiresByType image/jpeg "access plus 1 day"
  ExpiresByType image/png "access plus 1 day"
  ExpiresByType text/css "access plus 1 day"
  ExpiresByType text/javascript "access plus 1 day"
  ExpiresByType application/javascript "access plus 1 day"
  ExpiresByType application/pdf "access plus 1 day"
  ExpiresByType image/x-icon "access plus 1 day"

  CacheQuickHandler on
  CacheLock on
  CacheLockPath /tmp/mod_cache-lock
  CacheIgnoreHeaders Set-Cookie

  # Set parameters for disk cache
  CacheRoot /var/cache/apache2/mod_cache_disk
  CacheDirLevels 2
  CacheDirLength 1

  # Set cache control for specific types of files
    CacheEnable disk
    CacheHeader on
    CacheDefaultExpire 3600
    CacheMaxExpire 86400
    CacheLastModifiedFactor 0.5

  Header set X-Dante-Cache "cache-active"
</IfDefine>

</Location>






###
### SSL Configuration
###

SSLRandomSeed startup file:/dev/urandom 512 
SSLRandomSeed connect builtin   
                                                                              
SSLCipherSuite HIGH:MEDIUM:!MD5:!RC4:!3DES:!ADH  
SSLProxyCipherSuite HIGH:MEDIUM:!MD5:!RC4:!3DES:!ADH  
                                                                              
SSLHonorCipherOrder on                                                        
                                                                              
SSLProtocol all -SSLv3                                                        
SSLProxyProtocol all -SSLv3                                                   
                                                                              
SSLPassPhraseDialog  builtin                                                  
                                                                              
SSLSessionCache        "shmcb:/var/cache/mod_ssl/scache(512000)"              
SSLSessionCacheTimeout  300                                                   
                                                                              
# Enable stapling for all SSL-enabled servers:                              
#SSLUseStapling On                                                            
                                                                              
#   Define a relatively small cache for OCSP Stapling using                   
#   the same mechanism that is used for the SSL session cache                 
#   above.  If stapling is used with more than a few certificates,            
#   the size may need to be increased.  (AH01929 will be logged.)             
#SSLStaplingCache "shmcb:/run/apache2/ssl_stapling(32768)"                    
                                                                              
#   Seconds before valid OCSP responses are expired from the cache            
#SSLStaplingStandardCacheTimeout 3600                                         
                                                                              
#   Seconds before invalid OCSP responses are expired from the cache          
#SSLStaplingErrorCacheTimeout 600                                             
                                                                              
##                                                                            
## SSL Virtual Host Context                                                   
##                                                                            



## rewrite an http request on port 443 to an https request on port 443
#<VirtualHost *:443>
#    ServerName 

#    RewriteEngine On
#    RewriteCond %{HTTPS} off
#    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
#</VirtualHost>


<VirtualHost _default_:443>
  DocumentRoot "/var/www/html"      
  ServerName localhost:443      
  ErrorLog                 /var/log/apache2/ssl_error.log        
  TransferLog              /var/log/apache2/ssl_access.log         
  SSLEngine on                              
  SSLCertificateFile       /etc/ssl/apache2/server.crt         
  SSLCertificateKeyFile    /etc/ssl/apache2/server.key             
#SSLCertificateChainFile   /etc/ssl/apache2/server-ca.pem   
                                                                 
<FilesMatch "\.(cgi|shtml|phtml|php)$">                                       
#    SSLOptions +StdEnvVars                                                    
</FilesMatch>

</VirtualHost>


## If we want an http to https redirect, adjust this here
 
#<VirtualHost *:80>
#  <Location "/">
#     Redirect permanent "https://%{HTTP_HOST}%{REQUEST_URI}"
#  </Location>
#</VirtualHost>


## TODO: currently we get an error message if we request https at 8080 and this is ok so
##       The first block is not good and we might drop it. Still check the second one!
##
## An https request landing on port 80 is redirected to https
##
#<If "%{SERVER_PORT} == 80">
#  <If "%{HTTPS} == 'on'">
#    RewriteEngine On
#    RewriteRule ^(.*)$ http://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
#  </If>
#</If>
#
#<If "%{SERVER_PORT} == 443">
#    # Configuration for port 443
#</If>



